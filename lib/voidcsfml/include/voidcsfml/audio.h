#ifndef VOIDCSFML_AUDIO_H
#define VOIDCSFML_AUDIO_H
#include <voidcsfml/system.h>
#include <voidcsfml/config.h>
VOIDCSFML_API sfml_audio_version(int*, int*, int*);
VOIDCSFML_API sfml_listener_allocate(void** result);
VOIDCSFML_API sfml_listener_free(void* self);
VOIDCSFML_API sfml_listener_setglobalvolume_Bw9(float volume);
VOIDCSFML_API sfml_listener_getglobalvolume(float* result);
VOIDCSFML_API sfml_listener_setposition_Bw9Bw9Bw9(float x, float y, float z);
VOIDCSFML_API sfml_listener_setposition_NzM(void* position);
VOIDCSFML_API sfml_listener_getposition(void* result);
VOIDCSFML_API sfml_listener_setdirection_Bw9Bw9Bw9(float x, float y, float z);
VOIDCSFML_API sfml_listener_setdirection_NzM(void* direction);
VOIDCSFML_API sfml_listener_getdirection(void* result);
VOIDCSFML_API sfml_listener_setupvector_Bw9Bw9Bw9(float x, float y, float z);
VOIDCSFML_API sfml_listener_setupvector_NzM(void* up_vector);
VOIDCSFML_API sfml_listener_getupvector(void* result);
VOIDCSFML_API sfml_alresource_allocate(void** result);
VOIDCSFML_API sfml_alresource_free(void* self);
VOIDCSFML_API sfml_soundsource_allocate(void** result);
VOIDCSFML_API sfml_soundsource_free(void* self);
VOIDCSFML_API sfml_soundsource_finalize(void* self);
VOIDCSFML_API sfml_soundsource_setpitch_Bw9(void* self, float pitch);
VOIDCSFML_API sfml_soundsource_setvolume_Bw9(void* self, float volume);
VOIDCSFML_API sfml_soundsource_setposition_Bw9Bw9Bw9(void* self, float x, float y, float z);
VOIDCSFML_API sfml_soundsource_setposition_NzM(void* self, void* position);
VOIDCSFML_API sfml_soundsource_setrelativetolistener_GZq(void* self, unsigned char relative);
VOIDCSFML_API sfml_soundsource_setmindistance_Bw9(void* self, float distance);
VOIDCSFML_API sfml_soundsource_setattenuation_Bw9(void* self, float attenuation);
VOIDCSFML_API sfml_soundsource_getpitch(void* self, float* result);
VOIDCSFML_API sfml_soundsource_getvolume(void* self, float* result);
VOIDCSFML_API sfml_soundsource_getposition(void* self, void* result);
VOIDCSFML_API sfml_soundsource_isrelativetolistener(void* self, unsigned char* result);
VOIDCSFML_API sfml_soundsource_getmindistance(void* self, float* result);
VOIDCSFML_API sfml_soundsource_getattenuation(void* self, float* result);
VOIDCSFML_API sfml_soundstream_ongetdata_callback(void (*callback)(void*, int16_t**, size_t*, unsigned char*));
VOIDCSFML_API sfml_soundstream_onseek_callback(void (*callback)(void*, void*));
VOIDCSFML_API sfml_soundstream_parent(void* self, void* parent);
VOIDCSFML_API sfml_soundstream_allocate(void** result);
VOIDCSFML_API sfml_soundstream_free(void* self);
VOIDCSFML_API sfml_soundstream_finalize(void* self);
VOIDCSFML_API sfml_soundstream_play(void* self);
VOIDCSFML_API sfml_soundstream_pause(void* self);
VOIDCSFML_API sfml_soundstream_stop(void* self);
VOIDCSFML_API sfml_soundstream_getchannelcount(void* self, unsigned int* result);
VOIDCSFML_API sfml_soundstream_getsamplerate(void* self, unsigned int* result);
VOIDCSFML_API sfml_soundstream_getstatus(void* self, int* result);
VOIDCSFML_API sfml_soundstream_setplayingoffset_f4T(void* self, void* time_offset);
VOIDCSFML_API sfml_soundstream_getplayingoffset(void* self, void* result);
VOIDCSFML_API sfml_soundstream_setloop_GZq(void* self, unsigned char loop);
VOIDCSFML_API sfml_soundstream_getloop(void* self, unsigned char* result);
VOIDCSFML_API sfml_soundstream_initialize(void* self);
VOIDCSFML_API sfml_soundstream_initialize_emSemS(void* self, unsigned int channel_count, unsigned int sample_rate);
VOIDCSFML_API sfml_soundstream_setpitch_Bw9(void* self, float pitch);
VOIDCSFML_API sfml_soundstream_setvolume_Bw9(void* self, float volume);
VOIDCSFML_API sfml_soundstream_setposition_Bw9Bw9Bw9(void* self, float x, float y, float z);
VOIDCSFML_API sfml_soundstream_setposition_NzM(void* self, void* position);
VOIDCSFML_API sfml_soundstream_setrelativetolistener_GZq(void* self, unsigned char relative);
VOIDCSFML_API sfml_soundstream_setmindistance_Bw9(void* self, float distance);
VOIDCSFML_API sfml_soundstream_setattenuation_Bw9(void* self, float attenuation);
VOIDCSFML_API sfml_soundstream_getpitch(void* self, float* result);
VOIDCSFML_API sfml_soundstream_getvolume(void* self, float* result);
VOIDCSFML_API sfml_soundstream_getposition(void* self, void* result);
VOIDCSFML_API sfml_soundstream_isrelativetolistener(void* self, unsigned char* result);
VOIDCSFML_API sfml_soundstream_getmindistance(void* self, float* result);
VOIDCSFML_API sfml_soundstream_getattenuation(void* self, float* result);
VOIDCSFML_API sfml_music_allocate(void** result);
VOIDCSFML_API sfml_music_free(void* self);
VOIDCSFML_API sfml_music_initialize(void* self);
VOIDCSFML_API sfml_music_finalize(void* self);
VOIDCSFML_API sfml_music_openfromfile_zkC(void* self, size_t filename_size, char* filename, unsigned char* result);
VOIDCSFML_API sfml_music_openfrommemory_5h8vgv(void* self, void* data, size_t size_in_bytes, unsigned char* result);
VOIDCSFML_API sfml_music_openfromstream_PO0(void* self, void* stream, unsigned char* result);
VOIDCSFML_API sfml_music_getduration(void* self, void* result);
VOIDCSFML_API sfml_music_play(void* self);
VOIDCSFML_API sfml_music_pause(void* self);
VOIDCSFML_API sfml_music_stop(void* self);
VOIDCSFML_API sfml_music_getchannelcount(void* self, unsigned int* result);
VOIDCSFML_API sfml_music_getsamplerate(void* self, unsigned int* result);
VOIDCSFML_API sfml_music_getstatus(void* self, int* result);
VOIDCSFML_API sfml_music_setplayingoffset_f4T(void* self, void* time_offset);
VOIDCSFML_API sfml_music_getplayingoffset(void* self, void* result);
VOIDCSFML_API sfml_music_setloop_GZq(void* self, unsigned char loop);
VOIDCSFML_API sfml_music_getloop(void* self, unsigned char* result);
VOIDCSFML_API sfml_music_setpitch_Bw9(void* self, float pitch);
VOIDCSFML_API sfml_music_setvolume_Bw9(void* self, float volume);
VOIDCSFML_API sfml_music_setposition_Bw9Bw9Bw9(void* self, float x, float y, float z);
VOIDCSFML_API sfml_music_setposition_NzM(void* self, void* position);
VOIDCSFML_API sfml_music_setrelativetolistener_GZq(void* self, unsigned char relative);
VOIDCSFML_API sfml_music_setmindistance_Bw9(void* self, float distance);
VOIDCSFML_API sfml_music_setattenuation_Bw9(void* self, float attenuation);
VOIDCSFML_API sfml_music_getpitch(void* self, float* result);
VOIDCSFML_API sfml_music_getvolume(void* self, float* result);
VOIDCSFML_API sfml_music_getposition(void* self, void* result);
VOIDCSFML_API sfml_music_isrelativetolistener(void* self, unsigned char* result);
VOIDCSFML_API sfml_music_getmindistance(void* self, float* result);
VOIDCSFML_API sfml_music_getattenuation(void* self, float* result);
VOIDCSFML_API sfml_sound_allocate(void** result);
VOIDCSFML_API sfml_sound_free(void* self);
VOIDCSFML_API sfml_sound_initialize(void* self);
VOIDCSFML_API sfml_sound_initialize_mWu(void* self, void* buffer);
VOIDCSFML_API sfml_sound_finalize(void* self);
VOIDCSFML_API sfml_sound_play(void* self);
VOIDCSFML_API sfml_sound_pause(void* self);
VOIDCSFML_API sfml_sound_stop(void* self);
VOIDCSFML_API sfml_sound_setbuffer_mWu(void* self, void* buffer);
VOIDCSFML_API sfml_sound_setloop_GZq(void* self, unsigned char loop);
VOIDCSFML_API sfml_sound_setplayingoffset_f4T(void* self, void* time_offset);
VOIDCSFML_API sfml_sound_getbuffer(void* self, void** result);
VOIDCSFML_API sfml_sound_getloop(void* self, unsigned char* result);
VOIDCSFML_API sfml_sound_getplayingoffset(void* self, void* result);
VOIDCSFML_API sfml_sound_getstatus(void* self, int* result);
VOIDCSFML_API sfml_sound_resetbuffer(void* self);
VOIDCSFML_API sfml_sound_setpitch_Bw9(void* self, float pitch);
VOIDCSFML_API sfml_sound_setvolume_Bw9(void* self, float volume);
VOIDCSFML_API sfml_sound_setposition_Bw9Bw9Bw9(void* self, float x, float y, float z);
VOIDCSFML_API sfml_sound_setposition_NzM(void* self, void* position);
VOIDCSFML_API sfml_sound_setrelativetolistener_GZq(void* self, unsigned char relative);
VOIDCSFML_API sfml_sound_setmindistance_Bw9(void* self, float distance);
VOIDCSFML_API sfml_sound_setattenuation_Bw9(void* self, float attenuation);
VOIDCSFML_API sfml_sound_getpitch(void* self, float* result);
VOIDCSFML_API sfml_sound_getvolume(void* self, float* result);
VOIDCSFML_API sfml_sound_getposition(void* self, void* result);
VOIDCSFML_API sfml_sound_isrelativetolistener(void* self, unsigned char* result);
VOIDCSFML_API sfml_sound_getmindistance(void* self, float* result);
VOIDCSFML_API sfml_sound_getattenuation(void* self, float* result);
VOIDCSFML_API sfml_soundbuffer_allocate(void** result);
VOIDCSFML_API sfml_soundbuffer_free(void* self);
VOIDCSFML_API sfml_soundbuffer_initialize(void* self);
VOIDCSFML_API sfml_soundbuffer_finalize(void* self);
VOIDCSFML_API sfml_soundbuffer_loadfromfile_zkC(void* self, size_t filename_size, char* filename, unsigned char* result);
VOIDCSFML_API sfml_soundbuffer_loadfrommemory_5h8vgv(void* self, void* data, size_t size_in_bytes, unsigned char* result);
VOIDCSFML_API sfml_soundbuffer_loadfromstream_PO0(void* self, void* stream, unsigned char* result);
VOIDCSFML_API sfml_soundbuffer_loadfromsamples_xzLJvtemSemS(void* self, int16_t* samples, uint64_t sample_count, unsigned int channel_count, unsigned int sample_rate, unsigned char* result);
VOIDCSFML_API sfml_soundbuffer_savetofile_zkC(void* self, size_t filename_size, char* filename, unsigned char* result);
VOIDCSFML_API sfml_soundbuffer_getsamples(void* self, int16_t** result);
VOIDCSFML_API sfml_soundbuffer_getsamplecount(void* self, uint64_t* result);
VOIDCSFML_API sfml_soundbuffer_getsamplerate(void* self, unsigned int* result);
VOIDCSFML_API sfml_soundbuffer_getchannelcount(void* self, unsigned int* result);
VOIDCSFML_API sfml_soundbuffer_getduration(void* self, void* result);
VOIDCSFML_API sfml_soundrecorder_onstart_callback(void (*callback)(void*, unsigned char*));
VOIDCSFML_API sfml_soundrecorder_onprocesssamples_callback(void (*callback)(void*, int16_t*, size_t, unsigned char*));
VOIDCSFML_API sfml_soundrecorder_onstop_callback(void (*callback)(void*));
VOIDCSFML_API sfml_soundrecorder_parent(void* self, void* parent);
VOIDCSFML_API sfml_soundrecorder_allocate(void** result);
VOIDCSFML_API sfml_soundrecorder_free(void* self);
VOIDCSFML_API sfml_soundrecorder_finalize(void* self);
VOIDCSFML_API sfml_soundrecorder_start_emS(void* self, unsigned int sample_rate, unsigned char* result);
VOIDCSFML_API sfml_soundrecorder_stop(void* self);
VOIDCSFML_API sfml_soundrecorder_getsamplerate(void* self, unsigned int* result);
VOIDCSFML_API sfml_soundrecorder_getavailabledevices(char*** result, size_t* result_size);
VOIDCSFML_API sfml_soundrecorder_getdefaultdevice(char** result);
VOIDCSFML_API sfml_soundrecorder_setdevice_zkC(void* self, size_t name_size, char* name, unsigned char* result);
VOIDCSFML_API sfml_soundrecorder_getdevice(void* self, char** result);
VOIDCSFML_API sfml_soundrecorder_setchannelcount_emS(void* self, unsigned int channel_count);
VOIDCSFML_API sfml_soundrecorder_getchannelcount(void* self, unsigned int* result);
VOIDCSFML_API sfml_soundrecorder_isavailable(unsigned char* result);
VOIDCSFML_API sfml_soundrecorder_initialize(void* self);
VOIDCSFML_API sfml_soundrecorder_setprocessinginterval_f4T(void* self, void* interval);
VOIDCSFML_API sfml_soundrecorder_onstart(void* self, unsigned char* result);
VOIDCSFML_API sfml_soundrecorder_onstop(void* self);
VOIDCSFML_API sfml_soundbufferrecorder_allocate(void** result);
VOIDCSFML_API sfml_soundbufferrecorder_initialize(void* self);
VOIDCSFML_API sfml_soundbufferrecorder_free(void* self);
VOIDCSFML_API sfml_soundbufferrecorder_finalize(void* self);
VOIDCSFML_API sfml_soundbufferrecorder_getbuffer(void* self, void** result);
VOIDCSFML_API sfml_soundbufferrecorder_start_emS(void* self, unsigned int sample_rate, unsigned char* result);
VOIDCSFML_API sfml_soundbufferrecorder_stop(void* self);
VOIDCSFML_API sfml_soundbufferrecorder_getsamplerate(void* self, unsigned int* result);
VOIDCSFML_API sfml_soundbufferrecorder_getavailabledevices(char*** result, size_t* result_size);
VOIDCSFML_API sfml_soundbufferrecorder_getdefaultdevice(char** result);
VOIDCSFML_API sfml_soundbufferrecorder_setdevice_zkC(void* self, size_t name_size, char* name, unsigned char* result);
VOIDCSFML_API sfml_soundbufferrecorder_getdevice(void* self, char** result);
VOIDCSFML_API sfml_soundbufferrecorder_setchannelcount_emS(void* self, unsigned int channel_count);
VOIDCSFML_API sfml_soundbufferrecorder_getchannelcount(void* self, unsigned int* result);
VOIDCSFML_API sfml_soundbufferrecorder_isavailable(unsigned char* result);
#endif
